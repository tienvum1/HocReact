import React, { useState } from 'react';
import './BasicCommands.css';

/**
 * Trang h∆∞·ªõng d·∫´n c√°c l·ªánh Git c∆° b·∫£n
 * Bao g·ªìm c√°c l·ªánh th∆∞·ªùng d√πng nh·∫•t trong Git
 */
function BasicCommands() {
  const [activeCommand, setActiveCommand] = useState(null);

  // Danh s√°ch c√°c l·ªánh Git c∆° b·∫£n
  const commands = [
    {
      id: 'init',
      name: 'git init',
      description: 'Kh·ªüi t·∫°o m·ªôt Git repository m·ªõi',
      syntax: 'git init [directory-name]',
      example: 'git init my-project',
      explanation: 'T·∫°o m·ªôt th∆∞ m·ª•c .git ·∫©n ƒë·ªÉ theo d√µi c√°c thay ƒë·ªïi trong project.',
      useCase: 'S·ª≠ d·ª•ng khi b·∫Øt ƒë·∫ßu m·ªôt project m·ªõi ho·∫∑c mu·ªën th√™m Git v√†o project hi·ªán t·∫°i.'
    },
    {
      id: 'clone',
      name: 'git clone',
      description: 'Sao ch√©p m·ªôt repository t·ª´ remote v·ªÅ local',
      syntax: 'git clone <repository-url> [directory-name]',
      example: 'git clone https://github.com/user/repo.git',
      explanation: 'T·∫£i v·ªÅ to√†n b·ªô l·ªãch s·ª≠ v√† n·ªôi dung c·ªßa repository t·ª´ server.',
      useCase: 'S·ª≠ d·ª•ng khi mu·ªën l√†m vi·ªác v·ªõi m·ªôt project c√≥ s·∫µn tr√™n GitHub, GitLab, etc.'
    },
    {
      id: 'add',
      name: 'git add',
      description: 'Th√™m file v√†o staging area',
      syntax: 'git add <file-name> | git add . | git add -A',
      example: 'git add index.html\ngit add .\ngit add -A',
      explanation: 'Chu·∫©n b·ªã c√°c file ƒë·ªÉ commit. Staging area l√† n∆°i t·∫°m th·ªùi tr∆∞·ªõc khi commit.',
      useCase: 'S·ª≠ d·ª•ng tr∆∞·ªõc m·ªói l·∫ßn commit ƒë·ªÉ ch·ªçn nh·ªØng thay ƒë·ªïi mu·ªën l∆∞u.'
    },
    {
      id: 'commit',
      name: 'git commit',
      description: 'L∆∞u c√°c thay ƒë·ªïi v√†o repository',
      syntax: 'git commit -m "commit message"',
      example: 'git commit -m "Add login feature"',
      explanation: 'T·∫°o m·ªôt snapshot c·ªßa project t·∫°i th·ªùi ƒëi·ªÉm hi·ªán t·∫°i v·ªõi message m√¥ t·∫£.',
      useCase: 'S·ª≠ d·ª•ng ƒë·ªÉ l∆∞u l·∫°i c√°c thay ƒë·ªïi c√≥ √Ω nghƒ©a trong qu√° tr√¨nh ph√°t tri·ªÉn.'
    },
    {
      id: 'status',
      name: 'git status',
      description: 'Ki·ªÉm tra tr·∫°ng th√°i c·ªßa working directory',
      syntax: 'git status',
      example: 'git status',
      explanation: 'Hi·ªÉn th·ªã c√°c file ƒë√£ thay ƒë·ªïi, file trong staging area, v√† file ch∆∞a ƒë∆∞·ª£c track.',
      useCase: 'S·ª≠ d·ª•ng th∆∞·ªùng xuy√™n ƒë·ªÉ bi·∫øt tr·∫°ng th√°i hi·ªán t·∫°i c·ªßa project.'
    },
    {
      id: 'push',
      name: 'git push',
      description: 'ƒê·∫©y commits t·ª´ local l√™n remote repository',
      syntax: 'git push [remote] [branch]',
      example: 'git push origin main\ngit push -u origin feature-branch',
      explanation: 'Upload c√°c commit t·ª´ m√°y local l√™n server ƒë·ªÉ chia s·∫ª v·ªõi team.',
      useCase: 'S·ª≠ d·ª•ng sau khi commit ƒë·ªÉ c·∫≠p nh·∫≠t code l√™n repository chung.'
    },
    {
      id: 'pull',
      name: 'git pull',
      description: 'K√©o c√°c thay ƒë·ªïi t·ª´ remote v·ªÅ local',
      syntax: 'git pull [remote] [branch]',
      example: 'git pull origin main',
      explanation: 'T·∫£i v·ªÅ v√† merge c√°c commit m·ªõi t·ª´ remote repository.',
      useCase: 'S·ª≠ d·ª•ng ƒë·ªÉ c·∫≠p nh·∫≠t code m·ªõi nh·∫•t t·ª´ team tr∆∞·ªõc khi l√†m vi·ªác.'
    },
    {
      id: 'log',
      name: 'git log',
      description: 'Xem l·ªãch s·ª≠ commit',
      syntax: 'git log [options]',
      example: 'git log\ngit log --oneline\ngit log --graph',
      explanation: 'Hi·ªÉn th·ªã danh s√°ch c√°c commit v·ªõi th√¥ng tin chi ti·∫øt.',
      useCase: 'S·ª≠ d·ª•ng ƒë·ªÉ xem l·∫°i l·ªãch s·ª≠ ph√°t tri·ªÉn c·ªßa project.'
    }
  ];

  const copyToClipboard = (text) => {
    navigator.clipboard.writeText(text);
    // C√≥ th·ªÉ th√™m notification ·ªü ƒë√¢y
  };

  return (
    <div className="basic-commands-page">
      <div className="page-header">
        <h1>‚ö° L·ªánh Git C∆° B·∫£n</h1>
        <p>T√¨m hi·ªÉu c√°c l·ªánh Git thi·∫øt y·∫øu m√† m·ªçi developer c·∫ßn bi·∫øt</p>
      </div>

      <div className="commands-container">
        <div className="commands-grid">
          {commands.map((command) => (
            <div 
              key={command.id} 
              className={`command-card ${
                activeCommand === command.id ? 'active' : ''
              }`}
              onClick={() => setActiveCommand(
                activeCommand === command.id ? null : command.id
              )}
            >
              <div className="command-header">
                <h3 className="command-name">{command.name}</h3>
                <button 
                  className="copy-btn"
                  onClick={(e) => {
                    e.stopPropagation();
                    copyToClipboard(command.example.split('\n')[0]);
                  }}
                  title="Copy command"
                >
                  üìã
                </button>
              </div>
              
              <p className="command-description">{command.description}</p>
              
              {activeCommand === command.id && (
                <div className="command-details">
                  <div className="detail-section">
                    <h4>C√∫ ph√°p:</h4>
                    <code className="syntax">{command.syntax}</code>
                  </div>
                  
                  <div className="detail-section">
                    <h4>V√≠ d·ª•:</h4>
                    <pre className="example">{command.example}</pre>
                  </div>
                  
                  <div className="detail-section">
                    <h4>Gi·∫£i th√≠ch:</h4>
                    <p className="explanation">{command.explanation}</p>
                  </div>
                  
                  <div className="detail-section">
                    <h4>Khi n√†o s·ª≠ d·ª•ng:</h4>
                    <p className="use-case">{command.useCase}</p>
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>

      {/* Quick Reference Section */}
      <div className="quick-reference">
        <h2>üöÄ Quick Reference</h2>
        <div className="workflow-example">
          <h3>Workflow c∆° b·∫£n:</h3>
          <div className="workflow-steps">
            <div className="workflow-step">
              <span className="step-number">1</span>
              <code>git add .</code>
              <span className="step-desc">Th√™m t·∫•t c·∫£ file v√†o staging</span>
            </div>
            <div className="workflow-step">
              <span className="step-number">2</span>
              <code>git commit -m "message"</code>
              <span className="step-desc">Commit v·ªõi message</span>
            </div>
            <div className="workflow-step">
              <span className="step-number">3</span>
              <code>git push origin main</code>
              <span className="step-desc">ƒê·∫©y l√™n remote repository</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default BasicCommands;